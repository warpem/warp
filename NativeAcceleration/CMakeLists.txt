CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(NativeAcceleration LANGUAGES CUDA CXX)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR}/cmake)


FIND_PACKAGE(Threads REQUIRED)
FIND_PACKAGE(FFTW COMPONENTS FLOAT_THREADS_LIB REQUIRED)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

#NativeAcceleration

set(CMAKE_POSITION_INDEPENDENT_CODE ON)

INCLUDE(FindTIFF)

INCLUDE_DIRECTORIES(include ${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES("${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES}") 

FILE(GLOB_RECURSE SOURCES src/*.cu src/*.cpp gtom/src/*.cu gtom/src/*.cpp liblion/*.cpp liblion/*.cc)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1y -w -fPIC -mavx2 -mf16c")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pthread")

add_compile_definitions("FLOAT_PRECISION")

SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-w")
SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-restrict")
SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-use_fast_math")
SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-lineinfo")
SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-std=c++11")
SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-cudart=static")
#SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};--ptxas-options=-v")

ADD_LIBRARY(NativeAcceleration SHARED ${SOURCES})

set_target_properties(NativeAcceleration PROPERTIES CUDA_ARCHITECTURES "52;61;75;86")

TARGET_LINK_LIBRARIES(NativeAcceleration ${FFTW_LIBRARIES} libtiff.so libcudart.so libcufft.so libcublas.so libcurand.so ${CMAKE_THREAD_LIBS_INIT})
